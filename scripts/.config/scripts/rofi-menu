#!/bin/bash
###################################################
#                     ROFI MENU                   #
###################################################
declare -A LABELS
declare -A COMMANDS
###################################################
#                       BANGS                     #
###################################################
COMMANDS["-Bookmarks"]='rofi-bookmarks'
LABELS["-Bookmarks"]=""

COMMANDS["gg"]="$BROWSER  https://www.google.com/search?q=\ \" \${input}\""
LABELS["-gg"]=""

COMMANDS["yt"]="$BROWSER https://www.youtube.com/results?search_query=\ \" \${input}\""
LABELS["-yt"]=""

COMMANDS["g1"]="$BROWSER http://g1.globo.com/busca/?q=\ \" \${input}\""
LABELS["-g1"]=""

COMMANDS["ml"]="$BROWSER http://lista.mercadolivre.com.br/\ \" \${input}\""
LABELS["-ml"]=""

COMMANDS["tpb"]="$BROWSER http://thepiratebay.org/search/\" \${input}\""
LABELS["-tpb"]=""

COMMANDS["imdb"]="$BROWSER http://www.imdb.com/find?q=\" \${input}\""
LABELS["-imdb"]=""

COMMANDS["wiki"]="$BROWSER https://pt.wikipedia.org/wiki/\" \${input}\""
LABELS["-wiki"]=""

COMMANDS["-Pass"]='rofi-pass'
LABELS["-Pass"]=""
###################################################
#                   MENU CONFIG                   #
###################################################
function print_menu()
{
    for key in ${!LABELS[@]}
    do
  echo "$key    ${LABELS}"
     #   echo "$key    ${LABELS[$key]}"
     # my top version just shows the first field in labels row, not two words side by side
    done
}

## Show rofi
function start()
{
    # print_menu | rofi -dmenu -p "?=>" 
    print_menu | sort | rofi -dmenu -i -p "Executar:"
}

# Run it
value="$(start)"

# Split input.
# grab upto first space.
choice=${value%%\ *}
# graph remainder, minus space.
input=${value:$((${#choice}+1))}


## Cancelled? bail out

if test -z ${choice}
then
    exit
fi

# check if choice exists
if test ${COMMANDS[$choice]+isset}
then
    # Execute the choice
    eval echo "Executando: ${COMMANDS[$choice]}"
    eval ${COMMANDS[$choice]}
else
 eval  $choice | rofi
fi
