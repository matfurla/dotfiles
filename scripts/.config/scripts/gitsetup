#!/bin/bash
##################################################################################################################
# Written to be used on 64 bits computers
# Author 	: 	Erik Dubois
# Website 	: 	http://www.erikdubois.be
##################################################################################################################
# Read before using it.
# https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config
# https://www.atlassian.com/git/tutorials/undoing-changes/git-reset
# git reset --hard orgin/master
# ONLY if you are very sure and no coworkers are on your github.

# Command that have helped in the past
# Force git to overwrite local files on pull - no merge
# git fetch all
# git push --set-upstream origin master
# git reset --hard orgin/master

## Check if Git is Installed
if ! location="$(type -p "git")" || [ -z "git" ]; then

	echo "#################################################"
	echo "installing git for this script to work"
	echo "#################################################"

  	sudo apt install git -y
	# check if apt-git is installed
	if which apt-get > /dev/null; then

		sudo apt-get install -y git
	fi

	# check if pacman is installed
	if which pacman > /dev/null; then

		sudo pacman -S --noconfirm git
	fi

	# check if xbps-install is installed
	if which xbps-install > /dev/null; then
		sudo xbps-install git
	fi
fi

git init $HOME/Dotfiles
git config --global user.name "matfurla"
git config --global user.email "matfurla@hotmail.com"
sudo git config --system core.editor nano
git config --global credential.helper cache
git config --global credential.helper 'cache --timeout=18000'
git config --global push.default simple

echo "################################################################"
echo "###################    T H E   E N D      ######################"
echo "################################################################"